datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model User {
  userId            String             @id
  email             String             @unique
  firstName         String
  lastName          String
  fullName          String
  iconUri           String?
  people            Person[]
  subdomainPeople   SubdomainPerson[]
  subdomainContacts SubdomainContact[]
  teamPeople        TeamPerson[]
  projectPeople     ProjectPerson[]
  roles             Role[]
}

model Domain {
  domainId        String            @id
  name            String            @unique
  people          Person[]
  subdomains      Subdomain[]
  subdomainPeople SubdomainPerson[]
  teams           Team[]
  projects        Project[]
  roles           Role[]
}

model Person {
  role Role @relation(fields: [userId, domainId], references: [userId, domainId])

  userId String
  user   User   @relation(fields: [userId], references: [userId])

  domainId String
  domain   Domain @relation(fields: [domainId], references: [domainId])

  @@id([userId, domainId])
  @@index([userId])
  @@index([domainId])
}

model Role {
  userId String
  user   User   @relation(fields: [userId], references: [userId])

  domainId String
  domain   Domain @relation(fields: [domainId], references: [domainId])

  person Person?

  name String @default("Employee")

  @@id([userId, domainId])
  @@index([userId])
  @@index([domainId])
}

model Subdomain {
  subdomainId            String                  @id
  domainId               String
  domain                 Domain                  @relation(fields: [domainId], references: [domainId])
  name                   String                  @unique
  description            String                  @default("")
  subdomainPeople        SubdomainPerson[]
  subdomainContacts      SubdomainContact[]
  subdomainResourceLinks SubdomainResourceLink[]
  teamSubdomains         TeamSubdomain[]
  projectSubdomains      ProjectSubdomain[]

  @@index([domainId])
}

model SubdomainPerson {
  userId String
  user   User   @relation(fields: [userId], references: [userId])

  domainId String
  domain   Domain @relation(fields: [domainId], references: [domainId])

  subdomainId String
  subdomains  Subdomain @relation(fields: [subdomainId], references: [subdomainId])

  @@id([userId, subdomainId])
  @@index([userId])
  @@index([subdomainId])
  @@index([domainId])
}

model SubdomainContact {
  subdomainId String
  subdomains  Subdomain @relation(fields: [subdomainId], references: [subdomainId])

  userId String
  user   User   @relation(fields: [userId], references: [userId])

  @@id([subdomainId, userId])
  @@index([subdomainId])
  @@index([userId])
}

model SubdomainResourceLink {
  linkId String @id

  subdomainId String
  subdomains  Subdomain @relation(fields: [subdomainId], references: [subdomainId])

  title    String
  subTitle String
  href     String
  iconUri  String?

  @@index([subdomainId])
}

model Team {
  teamId  String  @id
  name    String
  iconUri String?

  domainId          String
  domain            Domain             @relation(fields: [domainId], references: [domainId])
  teamPeople        TeamPerson[]
  teamSubdomains    TeamSubdomain[]
  projectTeams      ProjectTeam[]
  projectSubdomains ProjectSubdomain[]

  @@index([domainId])
}

model TeamPerson {
  teamId String
  team   Team   @relation(fields: [teamId], references: [teamId])

  userId String
  user   User   @relation(fields: [userId], references: [userId])

  role String

  @@id([teamId, userId])
  @@index([teamId])
  @@index([userId])
}

model TeamSubdomain {
  teamId String
  team   Team   @relation(fields: [teamId], references: [teamId])

  subdomainId String
  subdomains  Subdomain @relation(fields: [subdomainId], references: [subdomainId])

  @@id([teamId, subdomainId])
  @@index([teamId])
  @@index([subdomainId])
}

model Project {
  projectId String  @id
  name      String
  iconUri   String?

  domainId      String
  domain        Domain          @relation(fields: [domainId], references: [domainId])
  projectPeople ProjectPerson[]
  projectTeams  ProjectTeam[]

  @@index([domainId])
}

model ProjectPerson {
  projectId String
  project   Project @relation(fields: [projectId], references: [projectId])

  userId String
  user   User   @relation(fields: [userId], references: [userId])

  role String

  @@id([projectId, userId])
  @@index([projectId])
  @@index([userId])
}

model ProjectTeam {
  projectId String
  project   Project @relation(fields: [projectId], references: [projectId])

  teamId String
  team   Team   @relation(fields: [teamId], references: [teamId])

  role String

  @@id([projectId, teamId])
  @@index([projectId])
  @@index([teamId])
}

model ProjectSubdomain {
  teamId String
  team   Team   @relation(fields: [teamId], references: [teamId])

  subdomainId String
  subdomains  Subdomain @relation(fields: [subdomainId], references: [subdomainId])

  @@id([teamId, subdomainId])
  @@index([teamId])
  @@index([subdomainId])
}
